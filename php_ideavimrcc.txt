
nmap zrc :source /Users/roller/Desktop/ideavimrc/php_ideavimrcc.txt <CR>


:set rnu
:set surround
:set easymotion
:set clipboard=unnamed
":set hlsearch
":set ignorecase
":set incsearch

nmap <C-;> A;<Esc>
imap <C-;> <Esc>A;
vmap <C-;> <Esc>A;<Esc>

:nmap <Tab> :action ReformatCode<CR>zz

vmap <Space> :action SelectNextOccurrence<CR>
nmap <Space> :action AceAction<CR>

:imap zz <Esc>
:vmap zz <Esc>

:nmap zh ^
:imap zh <Esc>^i
:vmap zh ^
:nmap zl $
:imap zl <End>
:vmap zl $

:imap zs $this->
:imap z. ->
:imap z/ =>

nmap zp "0p
nmap zP "0P
imap zp <Esc>"0pa
imap zP <Esc>"0Pa

:nmap z: ^f(vi(
:nmap z; ^f=wvt;
:nmap z, ^f:wvt,
:nmap z\ ^v$

vmap z' c''<Esc>PF'
vmap z" c""<Esc>PF"
vmap z( c()<Esc>PF(
vmap z[ c[]<Esc>PF[
vmap z{ c{}<Esc>PF{
vmap z< c<><Esc>PF<
vmap z` c``<Esc>PF`

:nmap <BS> a<BS>
:imap zd <Esc>dd
nmap qq ZQ
nmap zq :wq<CR>
:nmap <BS> a<BS>
imap <F1> <Esc>mb"2y?@test<CR>"1y?/<CR>`b"1p"2p?function<CR>wzz
nmap <F1> mb"2y?@test<CR>"1y?/<CR>`b"1p"2p?function<CR>wzz

imap zy <Esc>mb"by?function test<CR>"ay^`b"ap"bp?public<CR>2w:action ReformatCode<CR>
nmap zy mb"by?function test<CR>"ay^`b"ap"bp?public<CR>2w:action ReformatCode<CR>
imap zx <Esc>ct_
nmap zx ct_
imap zf <Esc>f_a
nmap zf f_l


imap <C-.> ->
imap <C-,> =>

nmap zk :action Back<CR>
imap zk <Esc>:action Back<CR>
nmap zj :action Forward<CR>
imap zj <Esc>:action Forward<CR>
nmap zn :action GotoNextError<CR>
imap zn <Esc>:action GotoNextError<CR>
nmap zm :action ShowIntentionActions<CR>
imap zm <Esc>:action ShowIntentionActions<CR>
nmap zcp zz:action CheckinProject<CR>

map zra zz:action ReformatCode<CR>:action Rerun<CR>
imap zra <Esc>zz:action ReformatCode<CR>:action Rerun<CR>

map zrr :action RenameElement<CR>

imap zrv <Esc>:action IntroduceVariable<CR>
nmap zrv :action IntroduceVariable<CR>
vmap zrv :action IntroduceVariable<CR>
imap zri <Esc>:action ExtractInterface<CR>
nmap zri :action ExtractInterface<CR>
vmap zri :action ExtractInterface<CR>
imap zrn <Esc>:action Inline<CR>
nmap zrn :action Inline<CR>
vmap zrn :action Inline<CR>
imap zrf <Esc>:action IntroduceField<CR>
nmap zrf :action IntroduceField<CR>
vmap zrf :action IntroduceField<CR>
imap zrp <Esc>:action IntroduceParameter<CR>
nmap zrp :action IntroduceParameter<CR>
vmap zrp :action IntroduceParameter<CR>
imap zrm <Esc>:action ExtractMethod<CR>
nmap zrm :action ExtractMethod<CR>
vmap zrm :action ExtractMethod<CR>
imap zrm <Esc>:action ExtractMethod<CR>
nmap zrm :action ExtractMethod<CR>
vmap zrm :action ExtractMethod<CR>
imap zrs <Esc>:action SurroundWith<CR>
nmap zrs :action SurroundWith<CR>
vmap zrs :action SurroundWith<CR>

nmap zsp va':<bs><bs><bs><bs><bs>action IntroduceParameter<CR>

map zro :action Move<CR>
imap zro <Esc>:action Move<CR>
map <C-D> :action EditorDuplicateLines<CR>
imap <C-D> <Esc>:action EditorDuplicateLines<CR>
map <A-D> :action EditorDeleteLine<CR>
imap <A-D> <Esc>:action EditorDeleteLine<CR>
map <A-K> :action MoveLineUp<CR>:action VimAutoIndentLines<CR>
imap <A-K> <Esc>:action MoveLineUp<CR>:action VimAutoIndentLines<CR>
map <A-J> :action MoveLineDown<CR>:action VimAutoIndentLines<CR>
imap <A-J> <Esc>:action MoveLineDown<CR>:action VimAutoIndentLines<CR>

imap zrl <Esc>:action ReformatCode<CR>
nmap zrl :action ReformatCode<CR>
vmap zrl <Esc>:action ReformatCode<CR>
imap zrt <Esc>:action FileStructurePopup<CR>
nmap zrt :action FileStructurePopup<CR>
imap zrg <Esc>:action Generate<CR>
nmap zrg :action Generate<CR>
imap zrw <Esc>:action NewElementSamePlace<CR>
nmap zrw :action NewElementSamePlace<CR>

:nmap zsu dd?class<CR>joprotected function setUp(): void{}<Bs><Esc>po}<Esc>:action ReformatCode<CR>
:nmap zrx dd?setUp<CR>jp:action RearrangeCode<CR>

nmap <C-\> :action AceTargetAction<CR>
nmap <A-L> :set rnu!<CR>